name: API

on:
  workflow_call:
    inputs:
      environment:
        description: Environment
        required: true
        type: string

env:
  RP_RUN_ID: api-${{ github.run_id }}
  HOST: ${{ inputs.environment }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: NPM
      working-directory: AQA/node
      run: npm install
    - name: Run UI tests
      working-directory: AQA/java
      run: xvfb-run --auto-servernum mvn clean test -Papi -q -Dhost=${{ env.HOST }} -Drp.launch=API -Drp.attributes="id:$RP_RUN_ID;env:$HOST;tag:API"
      env:
        JOB_NAME: API tests on ${{ env.HOST }}

  report:
    runs-on: ubuntu-latest
    needs: [ tests ]
    outputs:
      launchID: ${{ steps.extractReportID.outputs.launchID }}
      status: ${{ steps.extractReportID.outputs.status }}
      passed: ${{ steps.extractReportID.outputs.passed }}
      failed: ${{ steps.extractReportID.outputs.failed }}
      total: ${{ steps.extractReportID.outputs.total }}
    if: always()
    steps:
      - name: Get data for Report portal
        id: getTestLaunch
        uses: fjogeleit/http-request-action@master
        if: always()
        with:
          url: https://report-portal.rmr-t.ru/api/v1/superfarm/launch?filter.has.attributeKey=id&filter.has.attributeValue=${{ env.RP_RUN_ID }}
          method: 'GET'
          bearerToken: '830c1494-2c9c-4b3f-8cb8-29e54a84d2e0'

      - name: Extract data of the launch ${{ env.RP_RUN_ID }}
        id: extractReportID
        run: |
          echo ${{ steps.getTestLaunch.outputs.response }}
          echo "::set-output name=launchID::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].id)"
          echo "::set-output name=status::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].status)"
          echo "::set-output name=passed::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.passed)"
          echo "::set-output name=total::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.total)"
          echo "::set-output name=failed::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.failed)"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: 'AQA/java/screenshots'

  notify:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: [ report ]
    timeout-minutes: 3
    if: (needs.report.outputs.status == 'FAILED')
    steps:
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: 'API'
        #SLACK_ICON_EMOJI: 'ðŸŸ¢'
        SLACK_TITLE: API on $HOST
        SLACK_MESSAGE: ${{ needs.report.outputs.passed }} of ${{ needs.report.outputs.total }} passed - https://report-portal.rmr-t.ru/ui/#superfarm/launches/all/${{ needs.report.outputs.launchID }}
        SLACK_FOOTER: ''
        SLACK_COLOR: success
        SLACK_WEBHOOK: 'https://hooks.slack.com/services/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'