name: API tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        type: choice
        options:
          - develop
          - test
          - staging

env:
  RP_RUN_ID: api-${{ github.run_id }}
  HOST: ${{ inputs.environment }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: NPM
      working-directory: AQA/node
      run: npm install
    - name: Run UI tests
      working-directory: AQA/java
      run: xvfb-run --auto-servernum mvn clean test -Papi -q -Dhost=${{ env.HOST }} -Drp.launch=API -Drp.attributes="runId:$RP_RUN_ID;env:$HOST;tag:API"
      env:
        JOB_NAME: API tests on ${{ env.HOST }}

    - name: Get test launch with label ${{ env.RP_RUN_ID }}
      id: getTestLaunch
      uses: fjogeleit/http-request-action@master
      if: always()
      with:
        url: https://report-portal.rmr-t.ru/api/v1/superfarm/launch?filter.has.attributeKey=runID&filter.has.attributeValue=${{ env.RP_RUN_ID }}
        method: 'GET'
        bearerToken: '830c1494-2c9c-4b3f-8cb8-29e54a84d2e0'

    - name: Extract ID of the launch ${{ env.RP_RUN_ID }}
      id: extractReportID
      if: always()
      run: |
        echo ${{ steps.getTestLaunch.outputs.response }}
        echo "::set-output name=launchID::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].id)"
        echo "::set-output name=status::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].status)"
        echo "::set-output name=passed::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.passed)"
        echo "::set-output name=total::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.total)"
        echo "::set-output name=failed::$(echo '${{ steps.getTestLaunch.outputs.response }}' | jq .content[].statistics.executions.failed)"